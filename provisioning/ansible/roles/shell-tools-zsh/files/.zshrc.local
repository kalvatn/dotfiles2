# https://grml.org/zsh/grml-zsh-refcard.pdf

[ -f ~/.environment ] && source ~/.environment
[ -f ~/.aliases ] && source ~/.aliases

setopt vi

zshaddhistory() {  whence ${${(z)1}[1]} >/dev/null || return 2 }
export HISTFILESIZE=1000000000
export HISTSIZE=1000000000
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt INC_APPEND_HISTORY
setopt EXTENDED_HISTORY

local cmds=(kubectl helm kubeadm k3d skaffold laio awsprofile)
for cmd in $cmds; do
  if [ $commands[$cmd] ]; then
    # echo "$cmd in $commands[$cmd]"
    source <($cmd completion zsh)
    compdef "_$cmd" $cmd
  fi
done


function kube_context_name () {
  if [ ! $commands[kubectl] ]; then
    REPLY=""
  elif kubectl config current-context 2>&1 /dev/null | grep "error" > /dev/null; then
    REPLY="[n/a]"
  else
    REPLY="[$(kubectl config current-context | cut -d . -f1)"
  fi
}
function kube_namespace_name () {
  if [ ! $commands[kubectl] ]; then
    REPLY=""
  elif kubectl config current-context 2>&1 /dev/null | grep "error" > /dev/null; then
    REPLY="[n/a]"
  else
    REPLY="($(kubectl config view --minify --output 'jsonpath={..namespace}'))]"
  fi
}

grml_theme_add_token kube-name -f kube_context_name '%F{magenta}' '%f' > /dev/null
grml_theme_add_token kube-namespace -f kube_namespace_name '%F{green}' '%f' > /dev/null

# zstyle ':prompt:grml:left:setup' items rc change-root user at host path vcs kube-name kube-namespace percent
# zstyle ':prompt:grml:left:setup' items change-root path vcs
# zstyle ':prompt:grml:right:setup' items kube-name kube-namespace
zstyle ':prompt:grml:left:setup' items kube-name kube-namespace change-root path vcs

autoload -U edit-command-line
bindkey -M vicmd E edit-command-line

